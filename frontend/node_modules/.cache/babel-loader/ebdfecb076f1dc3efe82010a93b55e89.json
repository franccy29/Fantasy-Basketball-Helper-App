{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/ManagePlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport ListPlayerOn from './helpers/ListPlayerOn.jsx';\nimport ListAddPlayer from './helpers/ListAddPlayer.jsx';\nimport teamService from '../services/team.service.js';\nimport leagueService from '../services/league.service.js';\nimport { StyledManagePlayer } from '../style/ManagePlayer.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst rankThePositions = position => {\n  switch (position) {\n    case \"PG\":\n      return 6;\n\n    case \"SG\":\n      return 5;\n\n    case \"SF\":\n      return 4;\n\n    case \"PF\":\n      return 3;\n\n    case \"C\":\n      return 2;\n\n    default:\n      return 1;\n  }\n};\n\nexport default function ManagePlayer(props) {\n  _s();\n\n  const {\n    onClick,\n    selectedTeam\n  } = props;\n  const [userTeam, setUserTeam] = useState(null);\n  const [allPlayerInLeague, setAllPlayerInLeague] = useState(null);\n  let arrayList = [];\n  useEffect(() => {\n    teamService.getPlayersToManage(selectedTeam).then(response => setUserTeam(response.sort((a, b) => rankThePositions(a.position) < rankThePositions(b.position) ? 1 : rankThePositions(a.position) > rankThePositions(b.position) ? -1 : 0)));\n    leagueService.getAllPlayerInLeague().then(response => setAllPlayerInLeague(response));\n  }, []);\n\n  const addPlayerInTeam = player => {\n    player && setUserTeam(userTeam => [...userTeam, player]);\n  };\n\n  const removePlayerInTeam = player => {\n    if (player) {\n      setAllPlayerInLeague(allPlayerInLeague => [...allPlayerInLeague, player]);\n\n      for (let i = 0; i < userTeam.length; i++) {\n        if (player.player_id === userTeam[i].player_id) {\n          userTeam.splice(i, 1);\n          setUserTeam(userTeam);\n        }\n      }\n    }\n  };\n\n  if (userTeam && allPlayerInLeague) {\n    for (let i = 0; i < allPlayerInLeague.length; i++) {\n      for (let j = 0; j < userTeam.length; j++) {\n        if (allPlayerInLeague[i].player_id === userTeam[j].player_id) {\n          allPlayerInLeague.splice(i, 1);\n          setAllPlayerInLeague(allPlayerInLeague);\n        }\n      }\n    }\n\n    userTeam.forEach(singlePlayer => {\n      arrayList.push( /*#__PURE__*/_jsxDEV(ListPlayerOn, {\n        player: singlePlayer,\n        removePlayerInTeam: removePlayerInTeam\n      }, singlePlayer.player_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this));\n    }); // for (let i = arrayList.length; i < 20; i++) {\n    //   arrayList.push(<ListAddPlayer key={i} allPlayerInLeague={allPlayerInLeague} addPlayerInTeam={addPlayerInTeam} />);\n    // }\n\n    if (arrayList.length < 13) {\n      arrayList.push( /*#__PURE__*/_jsxDEV(ListAddPlayer, {\n        allPlayerInLeague: allPlayerInLeague,\n        addPlayerInTeam: addPlayerInTeam\n      }, arrayList.length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 22\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledManagePlayer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Adjust Your Team Roster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: arrayList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"save\",\n      onClick: () => {\n        onClick(\"SpecificTeamOverview\");\n        teamService.putUserTeam(selectedTeam, userTeam).then(() => onClick(\"SpecificTeamOverview\"));\n      },\n      variant: \"contained\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"back\",\n      onClick: () => onClick(\"SpecificTeamOverview\"),\n      variant: \"outlined\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ManagePlayer, \"+d6Mi8+rCjAKtvYZ48gJcgh+/pc=\");\n\n_c = ManagePlayer;\nManagePlayer.propTypes = {\n  // prop-types ensure that props are as component expected\n  onClick: PropTypes.func.isRequired,\n  selectedTeam: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagePlayer\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/ManagePlayer.jsx"],"names":["React","useState","useEffect","List","Button","PropTypes","ListPlayerOn","ListAddPlayer","teamService","leagueService","StyledManagePlayer","rankThePositions","position","ManagePlayer","props","onClick","selectedTeam","userTeam","setUserTeam","allPlayerInLeague","setAllPlayerInLeague","arrayList","getPlayersToManage","then","response","sort","a","b","getAllPlayerInLeague","addPlayerInTeam","player","removePlayerInTeam","i","length","player_id","splice","j","forEach","singlePlayer","push","putUserTeam","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport List from '@mui/material/List';\r\nimport Button from '@mui/material/Button';\r\nimport PropTypes from 'prop-types';\r\nimport ListPlayerOn from './helpers/ListPlayerOn.jsx';\r\nimport ListAddPlayer from './helpers/ListAddPlayer.jsx';\r\nimport teamService from '../services/team.service.js';\r\nimport leagueService from '../services/league.service.js';\r\n\r\nimport { StyledManagePlayer } from '../style/ManagePlayer.styles.jsx';\r\n\r\nconst rankThePositions = (position) => {\r\n  switch (position) {\r\n  case \"PG\":\r\n    return 6;\r\n      \r\n  case \"SG\":\r\n    return 5;\r\n    \r\n  case \"SF\":\r\n    return 4;\r\n    \r\n  case \"PF\":\r\n    return 3;\r\n      \r\n  case \"C\":\r\n    return 2;\r\n        \r\n  default:\r\n    return 1;\r\n  }\r\n};\r\n\r\nexport default function ManagePlayer(props) {\r\n  const { onClick, selectedTeam } = props;\r\n  const [userTeam, setUserTeam] = useState(null);\r\n  const [allPlayerInLeague, setAllPlayerInLeague] = useState(null);\r\n  let arrayList = [];\r\n\r\n        \r\n  useEffect(() => {\r\n    teamService.getPlayersToManage(selectedTeam)\r\n      .then((response) => setUserTeam(response.sort((a, b) => rankThePositions(a.position) < rankThePositions(b.position) ? 1 : rankThePositions(a.position) > rankThePositions(b.position) ? -1 : 0)));\r\n    \r\n    leagueService.getAllPlayerInLeague()\r\n      .then((response) => setAllPlayerInLeague(response));\r\n  }, []);\r\n\r\n  const addPlayerInTeam = (player) => {\r\n    player && setUserTeam(userTeam => [...userTeam, player]);\r\n  };\r\n  \r\n  const removePlayerInTeam = (player) => {\r\n    if (player) {\r\n      setAllPlayerInLeague(allPlayerInLeague => [...allPlayerInLeague, player]);\r\n      for (let i = 0; i < userTeam.length; i++) {\r\n        if (player.player_id === userTeam[i].player_id) {\r\n          userTeam.splice(i, 1);\r\n          setUserTeam(userTeam);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  if (userTeam && allPlayerInLeague) {\r\n\r\n    for (let i = 0; i < allPlayerInLeague.length; i++) {\r\n      for (let j = 0; j < userTeam.length; j++) {\r\n        if (allPlayerInLeague[i].player_id === userTeam[j].player_id) {\r\n          allPlayerInLeague.splice(i, 1);\r\n          setAllPlayerInLeague(allPlayerInLeague);\r\n        }\r\n      }\r\n    }\r\n\r\n    userTeam.forEach((singlePlayer) => {\r\n      arrayList.push(<ListPlayerOn key={singlePlayer.player_id} player={singlePlayer} removePlayerInTeam={removePlayerInTeam} />);\r\n    });\r\n\r\n    // for (let i = arrayList.length; i < 20; i++) {\r\n    //   arrayList.push(<ListAddPlayer key={i} allPlayerInLeague={allPlayerInLeague} addPlayerInTeam={addPlayerInTeam} />);\r\n    // }\r\n    if (arrayList.length < 13) {\r\n      arrayList.push(<ListAddPlayer key={arrayList.length} allPlayerInLeague={allPlayerInLeague} addPlayerInTeam={addPlayerInTeam} />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledManagePlayer>\r\n      <h3>Adjust Your Team Roster</h3>\r\n      <List>\r\n        {arrayList}\r\n      </List>\r\n\r\n      <Button\r\n        className={\"save\"}\r\n        onClick={() => {\r\n          onClick(\"SpecificTeamOverview\");\r\n          teamService.putUserTeam(selectedTeam, userTeam)\r\n            .then(() => onClick(\"SpecificTeamOverview\"));\r\n        }}\r\n        variant={\"contained\"}\r\n      >\r\n        Save\r\n      </Button>\r\n      <Button\r\n        className={\"back\"}\r\n        onClick={() => onClick(\"SpecificTeamOverview\")}\r\n        variant={\"outlined\"}\r\n      >\r\n        Back\r\n      </Button>\r\n\r\n    </StyledManagePlayer>\r\n  );\r\n}\r\n\r\nManagePlayer.propTypes = { // prop-types ensure that props are as component expected\r\n  onClick: PropTypes.func.isRequired,\r\n  selectedTeam: PropTypes.number.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}