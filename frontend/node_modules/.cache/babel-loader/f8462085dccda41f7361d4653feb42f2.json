{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/helpers/ListAddPlayer.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable camelcase */\nimport React, { useState } from 'react';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport { StyledListAddPlayer } from './../../style/ListAddPlayer.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListAddPlayer(props) {\n  _s();\n\n  const {\n    allPlayerInLeague,\n    addPlayerInTeam\n  } = props;\n  const [open, setOpen] = useState(false);\n  const allPlayersLabel = [];\n  allPlayerInLeague.forEach(player => {\n    allPlayersLabel.push({\n      label: `${player.player_name} - ${player.position}`,\n      player_id: player.player_id\n    }); // set pour label\n  });\n  const [value, setValue] = useState(allPlayersLabel[0]); // value will be set to the whole object of the player but the only thing that gonna be shown is the label: value\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const addPlayer = playerObject => {\n    allPlayerInLeague.forEach(unique => {\n      if (unique.player_id === playerObject.player_id) {\n        // tcheck dans le tas qui vien de DB qui fit genre objet avec ccee quon a choisis\n        addPlayerInTeam(unique);\n        return;\n      }\n    });\n  }; // trouble live: faut filter les option pour drop ceux deja dans la team sinon ca fuck up pi on double le key donc react est mad\n\n\n  return /*#__PURE__*/_jsxDEV(StyledListAddPlayer, {\n    children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: `Add a new player?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: open,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        },\n        options: allPlayersLabel,\n        sx: {\n          width: 300\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Find your player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Button\",\n        onClick: () => {\n          handleClick();\n          addPlayer(value);\n        },\n        variant: \"contained\",\n        children: \"Add player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListAddPlayer, \"sihGRocdVjwbgbNDzNMmb1Mm/WY=\");\n\n_c = ListAddPlayer;\nListAddPlayer.propTypes = {\n  // prop-types ensure that props are as component expected\n  addPlayerInTeam: PropTypes.func.isRequired,\n  allPlayerInLeague: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAddPlayer\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/helpers/ListAddPlayer.jsx"],"names":["React","useState","ListItemButton","ListItemText","Collapse","ExpandLess","ExpandMore","Autocomplete","TextField","Button","PropTypes","StyledListAddPlayer","ListAddPlayer","props","allPlayerInLeague","addPlayerInTeam","open","setOpen","allPlayersLabel","forEach","player","push","label","player_name","position","player_id","value","setValue","handleClick","addPlayer","playerObject","unique","event","newValue","width","params","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport React, { useState } from 'react';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport ExpandLess from '@mui/icons-material/ExpandLess';\r\nimport ExpandMore from '@mui/icons-material/ExpandMore';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StyledListAddPlayer } from './../../style/ListAddPlayer.styles.jsx';\r\n\r\nexport default function ListAddPlayer(props) {\r\n  const { allPlayerInLeague,  addPlayerInTeam } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const allPlayersLabel = [];\r\n  \r\n  allPlayerInLeague.forEach((player) => {\r\n    allPlayersLabel.push({label: `${player.player_name} - ${player.position}`, player_id: player.player_id}); // set pour label\r\n  });\r\n  const [value, setValue] = useState(allPlayersLabel[0]);\r\n\r\n  // value will be set to the whole object of the player but the only thing that gonna be shown is the label: value\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const addPlayer = (playerObject) => {\r\n    allPlayerInLeague.forEach((unique) => {\r\n      if (unique.player_id === playerObject.player_id) { // tcheck dans le tas qui vien de DB qui fit genre objet avec ccee quon a choisis\r\n        addPlayerInTeam(unique);\r\n        return;\r\n      }\r\n    });\r\n  };\r\n  // trouble live: faut filter les option pour drop ceux deja dans la team sinon ca fuck up pi on double le key donc react est mad\r\n  return (\r\n    <StyledListAddPlayer>\r\n      <ListItemButton onClick={handleClick}>\r\n        <ListItemText primary={`Add a new player?`} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItemButton>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n\r\n\r\n        <Autocomplete\r\n          disablePortal\r\n          id=\"combo-box-demo\"\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          options={allPlayersLabel}\r\n          sx={{ width: 300 }}\r\n          renderInput={(params) => <TextField {...params} label=\"Find your player\" />}\r\n        />\r\n        \r\n        <Button\r\n          className={\"Button\"}\r\n          onClick={() => {\r\n            handleClick();\r\n            addPlayer(value);\r\n          }}\r\n          variant={\"contained\"}\r\n        >\r\n          Add player\r\n        </Button>\r\n      \r\n      </Collapse>\r\n    </StyledListAddPlayer>\r\n  );\r\n}\r\n\r\nListAddPlayer.propTypes = { // prop-types ensure that props are as component expected\r\n  addPlayerInTeam: PropTypes.func.isRequired,\r\n  allPlayerInLeague: PropTypes.array.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}