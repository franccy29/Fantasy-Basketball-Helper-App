{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/SpecificTeamOverview.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Carousel from './utilities/Carousel.jsx';\nimport PlayerCards from './PlayerCards.jsx';\nimport PieChartGraph from './utilities/PieChartGraph.jsx';\nimport TwitterZone from './utilities/TwitterZone.jsx';\nimport teamService from '../services/team.service.js';\nimport EmptyPlayerCard from './EmptyPlayerCard.jsx';\nimport { StyledSpecificTeamOverview } from '../style/SpecificTeamOverview.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SpecificTeamOverview(props) {\n  _s();\n\n  const {\n    onClick,\n    selectedTeam,\n    onSelectedTeam\n  } = props;\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    teamService.getAllPlayerForTeam(selectedTeam).then(response => setData(response));\n  }, []);\n  const carouselArray = [];\n  let totalTeamFanPoints = 0;\n  let rankedPlayer = [];\n\n  if (data && data.players[0]) {\n    rankedPlayer = data.players.sort((a, b) => b.lastWeekFantasyPointsYahoo - a.lastWeekFantasyPointsYahoo);\n    carouselArray.push( /*#__PURE__*/_jsxDEV(PlayerCards, {\n      playerName: rankedPlayer[0].playerName,\n      playerImage: rankedPlayer[0].playerImage,\n      position: rankedPlayer[0].position,\n      lastWeekPoints: rankedPlayer[0].lastWeekPoints,\n      lastWeekFan: rankedPlayer[0].lastWeekFantasyPointsYahoo,\n      lastWeekBlocks: rankedPlayer[0].lastWeekBlockedShots,\n      lastWeekSteals: rankedPlayer[0].lastWeekSteals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }, this));\n    carouselArray.push( /*#__PURE__*/_jsxDEV(PlayerCards, {\n      playerName: rankedPlayer[rankedPlayer.length - 1].playerName,\n      playerImage: rankedPlayer[rankedPlayer.length - 1].playerImage,\n      position: rankedPlayer[rankedPlayer.length - 1].position,\n      lastWeekPoints: rankedPlayer[rankedPlayer.length - 1].lastWeekPoints,\n      lastWeekFan: rankedPlayer[rankedPlayer.length - 1].lastWeekFantasyPointsYahoo,\n      lastWeekBlocks: rankedPlayer[rankedPlayer.length - 1].lastWeekBlockedShots,\n      lastWeekSteals: rankedPlayer[rankedPlayer.length - 1].lastWeekSteals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this));\n    let foward = 0;\n    let center = 0;\n    let guard = 0;\n    data.players.forEach(player => {\n      totalTeamFanPoints += Number(player.lastWeekFantasyPointsYahoo);\n\n      if (player.position === \"SF\" || player.position === \"PF\") {\n        foward += Number(player.lastWeekFantasyPointsYahoo);\n      } else if (player.position === \"PG\" || player.position === \"SG\") {\n        guard += Number(player.lastWeekFantasyPointsYahoo);\n      } else {\n        center += Number(player.lastWeekFantasyPointsYahoo);\n      }\n    });\n    carouselArray.push( /*#__PURE__*/_jsxDEV(PieChartGraph, {\n      foward: foward,\n      center: center,\n      guard: guard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledSpecificTeamOverview, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"header\",\n      children: [data && data.teamName, \" - \", data && (Math.round(totalTeamFanPoints * 100) / 100).toFixed(2), \" fpts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"manage-players\",\n          onClick: () => onClick(\"ManagePlayer\"),\n          variant: \"outlined\",\n          children: \"Manage players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"StartingLineups\",\n        onClick: () => onClick(\"StartingLineups\"),\n        variant: \"outlined\",\n        children: \"Starting Lineups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slides\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        slides: carouselArray[0] ? carouselArray : [/*#__PURE__*/_jsxDEV(EmptyPlayerCard, {}, \"empty\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 63\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), carouselArray[0] && /*#__PURE__*/_jsxDEV(TwitterZone, {\n      playerId: rankedPlayer[0].playerId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"Delete\",\n        onClick: () => {\n          teamService.deleteTeam(selectedTeam);\n          onClick(\"HomeLog\");\n        },\n        variant: \"contained\",\n        color: \"error\",\n        children: \"Delete team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"back\",\n        onClick: () => {\n          onClick(\"HomeLog\");\n          onSelectedTeam(null);\n        },\n        variant: \"outlined\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpecificTeamOverview, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = SpecificTeamOverview;\nSpecificTeamOverview.propTypes = {\n  // prop-types ensure that props are as component expected\n  onClick: PropTypes.func.isRequired,\n  selectedTeam: PropTypes.number.isRequired,\n  onSelectedTeam: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificTeamOverview\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/SpecificTeamOverview.jsx"],"names":["React","useState","useEffect","PropTypes","Button","Carousel","PlayerCards","PieChartGraph","TwitterZone","teamService","EmptyPlayerCard","StyledSpecificTeamOverview","SpecificTeamOverview","props","onClick","selectedTeam","onSelectedTeam","data","setData","getAllPlayerForTeam","then","response","carouselArray","totalTeamFanPoints","rankedPlayer","players","sort","a","b","lastWeekFantasyPointsYahoo","push","playerName","playerImage","position","lastWeekPoints","lastWeekBlockedShots","lastWeekSteals","length","foward","center","guard","forEach","player","Number","teamName","Math","round","toFixed","playerId","deleteTeam","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport Carousel from './utilities/Carousel.jsx';\r\nimport PlayerCards from './PlayerCards.jsx';\r\nimport PieChartGraph from './utilities/PieChartGraph.jsx';\r\nimport TwitterZone from './utilities/TwitterZone.jsx';\r\nimport teamService from '../services/team.service.js';\r\nimport EmptyPlayerCard from './EmptyPlayerCard.jsx';\r\n\r\nimport { StyledSpecificTeamOverview } from '../style/SpecificTeamOverview.styles.jsx';\r\n\r\nexport default function SpecificTeamOverview(props) {\r\n  const { onClick, selectedTeam, onSelectedTeam } = props;\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    teamService.getAllPlayerForTeam(selectedTeam)\r\n      .then((response) => setData(response));\r\n  }, []);\r\n\r\n  const carouselArray = [];\r\n  let totalTeamFanPoints = 0;\r\n  let rankedPlayer = [];\r\n  if (data && data.players[0]) {\r\n\r\n    rankedPlayer = data.players.sort((a, b) => b.lastWeekFantasyPointsYahoo - a.lastWeekFantasyPointsYahoo);\r\n    carouselArray.push(<PlayerCards\r\n      playerName={rankedPlayer[0].playerName}\r\n      playerImage={rankedPlayer[0].playerImage}\r\n      position={rankedPlayer[0].position}\r\n      lastWeekPoints={rankedPlayer[0].lastWeekPoints}\r\n      lastWeekFan={rankedPlayer[0].lastWeekFantasyPointsYahoo}\r\n      lastWeekBlocks={rankedPlayer[0].lastWeekBlockedShots}\r\n      lastWeekSteals={rankedPlayer[0].lastWeekSteals}\r\n    />);\r\n    carouselArray.push(<PlayerCards\r\n      playerName={rankedPlayer[rankedPlayer.length - 1].playerName}\r\n      playerImage={rankedPlayer[rankedPlayer.length - 1].playerImage}\r\n      position={rankedPlayer[rankedPlayer.length - 1].position}\r\n      lastWeekPoints={rankedPlayer[rankedPlayer.length - 1].lastWeekPoints}\r\n      lastWeekFan={rankedPlayer[rankedPlayer.length - 1].lastWeekFantasyPointsYahoo}\r\n      lastWeekBlocks={rankedPlayer[rankedPlayer.length - 1].lastWeekBlockedShots}\r\n      lastWeekSteals={rankedPlayer[rankedPlayer.length - 1].lastWeekSteals}\r\n    />);\r\n    let foward = 0;\r\n    let center = 0;\r\n    let guard = 0;\r\n    data.players.forEach((player) => {\r\n      totalTeamFanPoints += Number(player.lastWeekFantasyPointsYahoo);\r\n      if (player.position === \"SF\" || player.position === \"PF\") {\r\n        foward += Number(player.lastWeekFantasyPointsYahoo);\r\n      } else if (player.position === \"PG\" || player.position === \"SG\") {\r\n        guard += Number(player.lastWeekFantasyPointsYahoo);\r\n      } else {\r\n        center += Number(player.lastWeekFantasyPointsYahoo);\r\n      }\r\n    });\r\n    carouselArray.push(<PieChartGraph foward={foward} center={center} guard={guard} />);\r\n\r\n  }\r\n\r\n  return (\r\n    <StyledSpecificTeamOverview>\r\n      <span className=\"header\">{data && data.teamName} - {data && (Math.round(totalTeamFanPoints * 100) / 100).toFixed(2)} fpts</span>\r\n      <div className={\"top-button\"} >\r\n        <div className={\"left-button\"} >\r\n          <Button\r\n            className={\"manage-players\"}\r\n            onClick={() => onClick(\"ManagePlayer\")}\r\n            variant={\"outlined\"}\r\n          >\r\n            Manage players\r\n          </Button>\r\n        </div>\r\n        <Button\r\n          className={\"StartingLineups\"}\r\n          onClick={() => onClick(\"StartingLineups\")}\r\n          variant={\"outlined\"}\r\n        >\r\n          Starting Lineups\r\n        </Button>\r\n      </div>\r\n      \r\n      <div className=\"slides\">\r\n        <Carousel slides={carouselArray[0] ? carouselArray : [<EmptyPlayerCard key={\"empty\"} />]} />\r\n      </div>\r\n\r\n      {carouselArray[0] && <TwitterZone playerId={rankedPlayer[0].playerId} />}\r\n\r\n      <div className={\"bottom-button\"}>\r\n\r\n        <Button\r\n          className={\"Delete\"}\r\n          onClick={() => {\r\n            teamService.deleteTeam(selectedTeam);\r\n            onClick(\"HomeLog\");\r\n          }}\r\n          variant={\"contained\"}\r\n          color={\"error\"}\r\n        >\r\n            Delete team\r\n        </Button>\r\n\r\n        <Button\r\n          className={\"back\"}\r\n          onClick={() => {\r\n            onClick(\"HomeLog\");\r\n            onSelectedTeam(null);\r\n          }}\r\n          variant={\"outlined\"}\r\n        >\r\n            Back\r\n        </Button>\r\n\r\n      </div>\r\n    </StyledSpecificTeamOverview>\r\n  );\r\n}\r\n\r\nSpecificTeamOverview.propTypes = { // prop-types ensure that props are as component expected\r\n  onClick: PropTypes.func.isRequired,\r\n  selectedTeam: PropTypes.number.isRequired,\r\n  onSelectedTeam: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}