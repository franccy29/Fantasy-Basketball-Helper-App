{"ast":null,"code":"/* eslint-disable camelcase */\nimport axiosInterceptor from './custom.axios-interceptor';\nconst API_URL = 'http://localhost:3001/api/team';\n\nconst getAllTeamForUser = () => {\n  return axiosInterceptor.get(API_URL + '/all').then(response => response.data);\n};\n\nconst getAllPlayerForTeam = teamId => {\n  return axiosInterceptor.get(API_URL + `/overview/${teamId}`).then(response => response.data);\n};\n\nconst getPlayersToManage = teamId => {\n  return axiosInterceptor.get(API_URL + `/overview/${teamId}`).then(response => {\n    const managePlayers = [];\n    response.data.players.forEach(playerInfo => {\n      managePlayers.push({\n        player_name: playerInfo.playerName,\n        position: playerInfo.position,\n        player_id: playerInfo.playerId\n      });\n    });\n    return managePlayers;\n  });\n};\n\nconst getStartingLineups = teamId => {\n  return axiosInterceptor.get(API_URL + `/overview/${teamId}`).then(response => {\n    // const managePlayers = {\n    //   teamName: response.data.teamName,\n    //   players: []\n    // };\n    // response.data.players.forEach((playerInfo) => {\n    //   managePlayers.players.push({\n    //     playerId: playerInfo.playerId,\n    //     playerFirstName: playerInfo.playerFirstName,\n    //     playerLastName: playerInfo.playerLastName,\n    //     playerImage: playerInfo.playerImage,\n    //     position: playerInfo.position,\n    //     Game: playerInfo.lastWeekGame,\n    //     Points: playerInfo.lastWeekPoints,\n    //     \"Fantasy Points\": playerInfo.lastWeekFan,\n    //     Blocks: playerInfo.lastWeekBlocks,\n    //     Steals: playerInfo.lastWeekSteals\n    //   });\n    // });\n    return response.data;\n  }).catch(err => console.log(err));\n};\n\nconst putUserTeam = (teamId, teamArray) => {\n  const playerIdArray = [];\n  teamArray.forEach(player => playerIdArray.push(player.player_id));\n  return axiosInterceptor.put(API_URL + `/update/${teamId}`, {\n    playerIdArray\n  });\n};\n\nconst deleteTeam = teamId => {\n  return axiosInterceptor.delete(API_URL + `/delete/${teamId}`);\n};\n\nconst createTeam = (name, plateform) => {\n  return axiosInterceptor.post(API_URL + `/create`, {\n    name,\n    plateform\n  });\n};\n\nconst getSpecificTeamSeasonData = teamId => {\n  return axiosInterceptor.get(`http://localhost:3001/api/myteam/season/${teamId}`);\n};\n\nconst getSpecificTeamLatestGameData = teamId => {\n  return axiosInterceptor.get(`http://localhost:3001/api/myteam/latest/${teamId}`);\n};\n\nconst getPlayerFantasyPointsHistory = teamId => {\n  return axiosInterceptor.get(`http://localhost:3001/api/myteam/${teamId}/fanpoints/all`).then(results => {\n    console.log(results);\n    results = results.data.map(player => {\n      const data = {\n        games: [],\n        playerName: player[0].playername\n      };\n      player.forEach((game, index) => {\n        data.games.push({\n          x: index,\n          y: game.fantasypointsyahoo\n        });\n      });\n      return data;\n    });\n    return results;\n  });\n};\n\nconst teamService = {\n  getAllTeamForUser,\n  getAllPlayerForTeam,\n  getPlayersToManage,\n  getStartingLineups,\n  putUserTeam,\n  deleteTeam,\n  createTeam,\n  getSpecificTeamSeasonData,\n  getSpecificTeamLatestGameData,\n  getPlayerFantasyPointsHistory\n};\nexport default teamService;","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/services/team.service.js"],"names":["axiosInterceptor","API_URL","getAllTeamForUser","get","then","response","data","getAllPlayerForTeam","teamId","getPlayersToManage","managePlayers","players","forEach","playerInfo","push","player_name","playerName","position","player_id","playerId","getStartingLineups","catch","err","console","log","putUserTeam","teamArray","playerIdArray","player","put","deleteTeam","delete","createTeam","name","plateform","post","getSpecificTeamSeasonData","getSpecificTeamLatestGameData","getPlayerFantasyPointsHistory","results","map","games","playername","game","index","x","y","fantasypointsyahoo","teamService"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\nimport axiosInterceptor from './custom.axios-interceptor';\r\n\r\nconst API_URL = 'http://localhost:3001/api/team';\r\n\r\n\r\nconst getAllTeamForUser = () => {\r\n  return axiosInterceptor.get(API_URL + '/all')\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst getAllPlayerForTeam = (teamId) => {\r\n  return axiosInterceptor.get(API_URL + `/overview/${teamId}`)\r\n    .then((response) => response.data);\r\n};\r\n\r\nconst getPlayersToManage = (teamId) => {\r\n  return axiosInterceptor.get(API_URL + `/overview/${teamId}`)\r\n    .then((response) => {\r\n      const managePlayers = [];\r\n\r\n      response.data.players.forEach((playerInfo) => {\r\n        managePlayers.push({\r\n          player_name: playerInfo.playerName,\r\n          position: playerInfo.position,\r\n          player_id: playerInfo.playerId\r\n        });\r\n      });\r\n\r\n      return managePlayers;\r\n    });\r\n};\r\n\r\nconst getStartingLineups = (teamId) => {\r\n  return axiosInterceptor.get(API_URL + `/overview/${teamId}`)\r\n    .then((response) => {\r\n      // const managePlayers = {\r\n      //   teamName: response.data.teamName,\r\n      //   players: []\r\n      // };\r\n\r\n      // response.data.players.forEach((playerInfo) => {\r\n      //   managePlayers.players.push({\r\n      //     playerId: playerInfo.playerId,\r\n      //     playerFirstName: playerInfo.playerFirstName,\r\n      //     playerLastName: playerInfo.playerLastName,\r\n      //     playerImage: playerInfo.playerImage,\r\n      //     position: playerInfo.position,\r\n      //     Game: playerInfo.lastWeekGame,\r\n      //     Points: playerInfo.lastWeekPoints,\r\n      //     \"Fantasy Points\": playerInfo.lastWeekFan,\r\n      //     Blocks: playerInfo.lastWeekBlocks,\r\n      //     Steals: playerInfo.lastWeekSteals\r\n      //   });\r\n      // });\r\n\r\n      return response.data;\r\n    }).catch((err) => console.log(err));\r\n};\r\n\r\nconst putUserTeam = (teamId, teamArray) => {\r\n  const playerIdArray = [];\r\n  teamArray.forEach((player) => playerIdArray.push(player.player_id));\r\n  return axiosInterceptor.put(API_URL + `/update/${teamId}`, { playerIdArray });\r\n};\r\n\r\nconst deleteTeam = (teamId) => {\r\n  return axiosInterceptor.delete(API_URL + `/delete/${teamId}`);\r\n};\r\n\r\nconst createTeam = (name, plateform) => {\r\n  return axiosInterceptor.post(API_URL + `/create`, {name, plateform});\r\n};\r\n\r\nconst getSpecificTeamSeasonData = (teamId) => {\r\n  return axiosInterceptor.get(`http://localhost:3001/api/myteam/season/${teamId}`);\r\n};\r\nconst getSpecificTeamLatestGameData = (teamId) => {\r\n  return axiosInterceptor.get(`http://localhost:3001/api/myteam/latest/${teamId}`);\r\n};\r\nconst getPlayerFantasyPointsHistory = (teamId) => {\r\n  return axiosInterceptor.get(`http://localhost:3001/api/myteam/${teamId}/fanpoints/all`)\r\n    .then((results) => {\r\n      console.log(results);\r\n      results = results.data.map((player) => {\r\n        const data = {\r\n          games: [],\r\n          playerName: player[0].playername\r\n        };\r\n        player.forEach((game, index) => {\r\n          data.games.push({\r\n            x: index,\r\n            y: game.fantasypointsyahoo\r\n          });\r\n        });\r\n        return data;\r\n      });\r\n      return results;\r\n    });\r\n};\r\n\r\nconst teamService = {\r\n  getAllTeamForUser,\r\n  getAllPlayerForTeam,\r\n  getPlayersToManage,\r\n  getStartingLineups,\r\n  putUserTeam,\r\n  deleteTeam,\r\n  createTeam,\r\n  getSpecificTeamSeasonData,\r\n  getSpecificTeamLatestGameData,\r\n  getPlayerFantasyPointsHistory\r\n};\r\n\r\nexport default teamService;\r\n"]},"metadata":{},"sourceType":"module"}