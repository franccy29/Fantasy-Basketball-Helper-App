{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/StartingLineups.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from './helpers/ListItem.jsx';\nimport Button from '@mui/material/Button';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport PropTypes from 'prop-types';\nimport teamService from '../services/team.service.js';\nimport playerStats from './PlayerStats.jsx';\nimport { StyledStartingLineups } from '../style/StartingLineups.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StartingLineups(props) {\n  _s();\n\n  const {\n    onClick,\n    selectedTeam\n  } = props;\n  const [lastWeekData, setLastWeekData] = useState(null);\n  const [sortType, setSortType] = React.useState('lastWeekPoints');\n  const [seasonData, setSeasonData] = useState();\n  const [latestGameData, setLatestGameData] = useState();\n  const [seasonFanPoints, setSeasonFanPoints] = useState();\n\n  const handleChange = event => {\n    setSortType(event.target.value);\n  };\n\n  const playerLatestGameData = {\n    id: 1,\n    playerid: 20,\n    name: \"Bradley Beal\",\n    team: \"PHI\",\n    position: \"SG\",\n    day: \"2021-11-11T00:00:00\",\n    fantasypoints: 77.5,\n    minutes: 61,\n    seconds: 64,\n    fieldgoalsmade: 18.9,\n    fieldgoalsattempted: 29.8,\n    fieldgoalspercentage: 99.3,\n    effectivefieldgoalspercentage: 99.3,\n    twopointersmade: 17.3,\n    twopointersattempted: 25.1,\n    twopointerspercentage: 108.1,\n    threepointersmade: 2.5,\n    threepointersattempted: 7.4,\n    threepointerspercentage: 52.3,\n    freethrowsmade: 12.6,\n    freethrowsattempted: 12.6,\n    freethrowspercentage: 157.1,\n    offensiverebounds: 0,\n    defensiverebounds: 9.9,\n    rebounds: 9.9,\n    offensivereboundspercentage: 0,\n    defensivereboundspercentage: 16.5,\n    totalreboundspercentage: 13.9,\n    assists: 12.3,\n    steals: 2.5,\n    blockedshots: 4.9,\n    turnovers: 4.9,\n    personalfouls: 4.9,\n    points: 51.8,\n    trueshootingattempts: 35.4,\n    trueshootingpercentage: 115.2,\n    playerefficiencyrating: 55.6,\n    assistspercentage: 37.3,\n    stealspercentage: 3.1,\n    blockspercentage: 9.5,\n    turnoverspercentage: 12.8,\n    usageratepercentage: 43,\n    fantasypointsfanduel: 82.2,\n    fantasypointsdraftkings: 80.1,\n    fantasypointsyahoo: 82.2,\n    plusminus: 14.1,\n    doubledoubles: 0,\n    tripledoubles: 0,\n    fantasypointsfantasydraft: 80.1\n  };\n  const playerSeasonStats = {\n    playerid: 20,\n    name: \"Bradley Beal\",\n    team: \"WAS\",\n    position: \"SG\",\n    games: 60,\n    fantasypoints: 2e+07,\n    minutes: 61,\n    seconds: 4027,\n    fieldgoalsmade: 3313,\n    fieldgoalsattempted: 23,\n    fieldgoalspercentage: 1033.8,\n    effectivefieldgoalspercentage: 2132.4,\n    twopointersmade: 74.8,\n    twopointersattempted: 82.1,\n    twopointerspercentage: 833.2,\n    threepointersmade: 1556.9,\n    threepointersattempted: 82.6,\n    threepointerspercentage: 200.6,\n    freethrowsmade: 575.5,\n    freethrowsattempted: 53.9,\n    freethrowspercentage: 629.5,\n    offensiverebounds: 708.2,\n    defensiverebounds: 137.2,\n    rebounds: 111.1,\n    offensivereboundspercentage: 325.6,\n    defensivereboundspercentage: 436.7,\n    totalreboundspercentage: 8.5,\n    assists: 16,\n    steals: 10.8,\n    blockedshots: 408.9,\n    turnovers: 106.5,\n    personalfouls: 33.9,\n    points: 288.5,\n    trueshootingattempts: 216,\n    trueshootingpercentage: 2897.8,\n    playerefficiencyrating: 2444.1,\n    assistspercentage: 91.5,\n    stealspercentage: 44.3,\n    blockspercentage: 32.8,\n    turnoverspercentage: 3.5,\n    usageratepercentage: 2,\n    fantasypointsfanduel: 16.3,\n    fantasypointsdraftkings: 52.9,\n    fantasypointsyahoo: 4167.8,\n    plusminus: 4303,\n    doubledoubles: 4167.8,\n    tripledoubles: -9.3,\n    fantasypointsfantasydraft: 9.5\n  };\n  const playerSeasonFanPoints = [{\n    x: 0,\n    y: 37.7\n  }, {\n    x: 1,\n    y: 17.2\n  }, {\n    x: 2,\n    y: 62.8\n  }, {\n    x: 3,\n    y: 45\n  }, {\n    x: 4,\n    y: 18.6\n  }, {\n    x: 5,\n    y: 19.5\n  }, {\n    x: 6,\n    y: 25.3\n  }, {\n    x: 8,\n    y: 23.8\n  }, {\n    x: 9,\n    y: 29\n  }, {\n    x: 10,\n    y: 24.5\n  }, {\n    x: 11,\n    y: 24.3\n  }, {\n    x: 12,\n    y: 37.9\n  }, {\n    x: 13,\n    y: 15.6\n  }, {\n    x: 14,\n    y: 21.7\n  }, {\n    x: 15,\n    y: 25.2\n  }, {\n    x: 16,\n    y: 16.5\n  }, {\n    x: 17,\n    y: 25.8\n  }]; // useEffect(() => {\n  // }, []);\n\n  useEffect(() => {\n    teamService.getStartingLineups(selectedTeam).then(response => setLastWeekData(response));\n    teamService.getSpecificTeamSeasonData(selectedTeam).then(response => setSeasonData(response));\n    teamService.getSpecificTeamLatestGameData(selectedTeam).then(response => setLatestGameData(response));\n    teamService.getPlayerFantasyPointsHistory(selectedTeam).then(response => setSeasonFanPoints(response));\n  }, []);\n  /*\r\n    How it's working: sort the array of player based on whats in the sortType variable, this follows the selected prompt\r\n      in the scrolling thing(i dont know the word).\r\n      This gives an ordered array in the way we want the list to be.\r\n      The list entries(on the screen) comes from the ListItem component wich takes firstName, lastName and position as props to set the label of the list item\r\n      AND it takes the useThat props that is passed straightttt to the carousel component so you need to pass it an array and everything is gonna be render\r\n      in the carousel.\r\n      IF IT DONT WORK, the ListItem component, in the carousel the slides is set as slides={[useThat]} SOOO drop the [], i made the testing without\r\n      passing useThat an array and only a component so it was my easy fix to test everything.\r\n  */\n\n  const arrayListItem = [];\n\n  if (lastWeekData && latestGameData && seasonData && seasonFanPoints) {\n    const rankedPlayers = lastWeekData.players.sort((a, b) => b[`${sortType}`] - a[`${sortType}`]);\n    console.log(rankedPlayers); // console.log(\"LAST WEEK'S DATA\", lastWeekData);\n    // console.log(\"SEASON DATA\", seasonData);\n    // console.log(\"LATEST GAME DATA\", latestGameData);\n\n    rankedPlayers.map(singlePlayer => {\n      //   // singlePlayer.playerName // = \"Bradley Beal\"\n      //   // console.log(`SINGLE PLAYER: ${singlePlayer.playerName} :: `, latestGameData.data.find(({ playername }) => playername === singlePlayer.playerName));\n      // console.log(seasonFanPoints.find(({ playerName }) => playerName === singlePlayer.playerName).games);\n      // seasonData.data.find(({ playername }) => playername === singlePlayer.playerName)\n      // latestGameData.data.find(({ playername }) => playername === singlePlayer.playerName)\n      arrayListItem.push( /*#__PURE__*/_jsxDEV(ListItem, {\n        useThat: playerStats(latestGameData.data.find(_ref => {\n          let {\n            playername\n          } = _ref;\n          return playername === singlePlayer.playerName;\n        }), seasonData.data.find(_ref2 => {\n          let {\n            playername\n          } = _ref2;\n          return playername === singlePlayer.playerName;\n        }), seasonFanPoints.find(_ref3 => {\n          let {\n            playerName\n          } = _ref3;\n          return playerName === singlePlayer.playerName;\n        }).games, singlePlayer),\n        playerName: singlePlayer.playerName,\n        position: singlePlayer.position,\n        sortType: sortType,\n        stat: singlePlayer[`${sortType}`]\n      }, singlePlayer.playerId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledStartingLineups, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: sortType // label=\"Rank by:\"\n        ,\n        onChange: handleChange // sx={{\"'&:not(.Mui-disabled):hover::before\": {borderColor: \"white\"}}}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"lastWeekFantasyPointsYahoo\",\n          children: \"Fantasy Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"lastWeekPoints\",\n          children: \"Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"lastWeekBlockedShots\",\n          children: \"Blocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"lastWeekSteals\",\n          children: \"Steals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: arrayListItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        onClick(\"SpecificTeamOverview\");\n      },\n      variant: \"outlined\",\n      className: \"back-button\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StartingLineups, \"/faqbs53orr2GKuM25oHwl8XXww=\");\n\n_c = StartingLineups;\nStartingLineups.propTypes = {\n  // prop-types ensure that props are as component expected\n  onClick: PropTypes.func.isRequired,\n  selectedTeam: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"StartingLineups\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/StartingLineups.jsx"],"names":["React","useState","useEffect","List","ListItem","Button","InputLabel","MenuItem","FormControl","Select","PropTypes","teamService","playerStats","StyledStartingLineups","StartingLineups","props","onClick","selectedTeam","lastWeekData","setLastWeekData","sortType","setSortType","seasonData","setSeasonData","latestGameData","setLatestGameData","seasonFanPoints","setSeasonFanPoints","handleChange","event","target","value","playerLatestGameData","id","playerid","name","team","position","day","fantasypoints","minutes","seconds","fieldgoalsmade","fieldgoalsattempted","fieldgoalspercentage","effectivefieldgoalspercentage","twopointersmade","twopointersattempted","twopointerspercentage","threepointersmade","threepointersattempted","threepointerspercentage","freethrowsmade","freethrowsattempted","freethrowspercentage","offensiverebounds","defensiverebounds","rebounds","offensivereboundspercentage","defensivereboundspercentage","totalreboundspercentage","assists","steals","blockedshots","turnovers","personalfouls","points","trueshootingattempts","trueshootingpercentage","playerefficiencyrating","assistspercentage","stealspercentage","blockspercentage","turnoverspercentage","usageratepercentage","fantasypointsfanduel","fantasypointsdraftkings","fantasypointsyahoo","plusminus","doubledoubles","tripledoubles","fantasypointsfantasydraft","playerSeasonStats","games","playerSeasonFanPoints","x","y","getStartingLineups","then","response","getSpecificTeamSeasonData","getSpecificTeamLatestGameData","getPlayerFantasyPointsHistory","arrayListItem","rankedPlayers","players","sort","a","b","console","log","map","singlePlayer","push","data","find","playername","playerName","playerId","propTypes","func","isRequired","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from './helpers/ListItem.jsx';\r\nimport Button from '@mui/material/Button';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport PropTypes from 'prop-types';\r\nimport teamService from '../services/team.service.js';\r\nimport playerStats from './PlayerStats.jsx';\r\n\r\nimport { StyledStartingLineups } from '../style/StartingLineups.styles.jsx';\r\n\r\nexport default function StartingLineups(props) {\r\n  const { onClick, selectedTeam } = props;\r\n  const [lastWeekData, setLastWeekData] = useState(null);\r\n  const [sortType, setSortType] = React.useState('lastWeekPoints');\r\n  const [seasonData, setSeasonData] = useState();\r\n  const [latestGameData, setLatestGameData] = useState();\r\n  const [seasonFanPoints, setSeasonFanPoints] = useState();\r\n\r\n  const handleChange = (event) => {\r\n    setSortType(event.target.value);\r\n  };\r\n\r\n  const playerLatestGameData = {\r\n    id: 1,\r\n    playerid: 20,\r\n    name: \"Bradley Beal\",\r\n    team: \"PHI\",\r\n    position: \"SG\",\r\n    day: \"2021-11-11T00:00:00\",\r\n    fantasypoints: 77.5,\r\n    minutes: 61,\r\n    seconds: 64,\r\n    fieldgoalsmade: 18.9,\r\n    fieldgoalsattempted: 29.8,\r\n    fieldgoalspercentage: 99.3,\r\n    effectivefieldgoalspercentage: 99.3,\r\n    twopointersmade: 17.3,\r\n    twopointersattempted: 25.1,\r\n    twopointerspercentage: 108.1,\r\n    threepointersmade: 2.5,\r\n    threepointersattempted: 7.4,\r\n    threepointerspercentage: 52.3,\r\n    freethrowsmade: 12.6,\r\n    freethrowsattempted: 12.6,\r\n    freethrowspercentage: 157.1,\r\n    offensiverebounds: 0,\r\n    defensiverebounds: 9.9,\r\n    rebounds: 9.9,\r\n    offensivereboundspercentage: 0,\r\n    defensivereboundspercentage: 16.5,\r\n    totalreboundspercentage: 13.9,\r\n    assists: 12.3,\r\n    steals: 2.5,\r\n    blockedshots: 4.9,\r\n    turnovers: 4.9,\r\n    personalfouls: 4.9,\r\n    points: 51.8,\r\n    trueshootingattempts: 35.4,\r\n    trueshootingpercentage: 115.2,\r\n    playerefficiencyrating: 55.6,\r\n    assistspercentage: 37.3,\r\n    stealspercentage: 3.1,\r\n    blockspercentage: 9.5,\r\n    turnoverspercentage: 12.8,\r\n    usageratepercentage: 43,\r\n    fantasypointsfanduel: 82.2,\r\n    fantasypointsdraftkings: 80.1,\r\n    fantasypointsyahoo: 82.2,\r\n    plusminus: 14.1,\r\n    doubledoubles: 0,\r\n    tripledoubles: 0,\r\n    fantasypointsfantasydraft: 80.1\r\n  };\r\n\r\n  const playerSeasonStats = {\r\n    playerid: 20,\r\n    name: \"Bradley Beal\",\r\n    team: \"WAS\",\r\n    position: \"SG\",\r\n    games: 60,\r\n    fantasypoints: 2e+07,\r\n    minutes: 61,\r\n    seconds: 4027,\r\n    fieldgoalsmade: 3313,\r\n    fieldgoalsattempted: 23,\r\n    fieldgoalspercentage: 1033.8,\r\n    effectivefieldgoalspercentage: 2132.4,\r\n    twopointersmade: 74.8,\r\n    twopointersattempted: 82.1,\r\n    twopointerspercentage: 833.2,\r\n    threepointersmade: 1556.9,\r\n    threepointersattempted: 82.6,\r\n    threepointerspercentage: 200.6,\r\n    freethrowsmade: 575.5,\r\n    freethrowsattempted: 53.9,\r\n    freethrowspercentage: 629.5,\r\n    offensiverebounds: 708.2,\r\n    defensiverebounds: 137.2,\r\n    rebounds: 111.1,\r\n    offensivereboundspercentage: 325.6,\r\n    defensivereboundspercentage: 436.7,\r\n    totalreboundspercentage: 8.5,\r\n    assists: 16,\r\n    steals: 10.8,\r\n    blockedshots: 408.9,\r\n    turnovers: 106.5,\r\n    personalfouls: 33.9,\r\n    points: 288.5,\r\n    trueshootingattempts: 216,\r\n    trueshootingpercentage: 2897.8,\r\n    playerefficiencyrating: 2444.1,\r\n    assistspercentage: 91.5,\r\n    stealspercentage: 44.3,\r\n    blockspercentage: 32.8,\r\n    turnoverspercentage: 3.5,\r\n    usageratepercentage: 2,\r\n    fantasypointsfanduel: 16.3,\r\n    fantasypointsdraftkings: 52.9,\r\n    fantasypointsyahoo: 4167.8,\r\n    plusminus: 4303,\r\n    doubledoubles: 4167.8,\r\n    tripledoubles: -9.3,\r\n    fantasypointsfantasydraft: 9.5,\r\n  };\r\n\r\n  const playerSeasonFanPoints = [\r\n    { x: 0, y: 37.7 },\r\n    { x: 1, y: 17.2 },\r\n    { x: 2, y: 62.8 },\r\n    { x: 3, y: 45 },\r\n    { x: 4, y: 18.6 },\r\n    { x: 5, y: 19.5 },\r\n    { x: 6, y: 25.3 },\r\n    { x: 8, y: 23.8 },\r\n    { x: 9, y: 29 },\r\n    { x: 10, y: 24.5 },\r\n    { x: 11, y: 24.3 },\r\n    { x: 12, y: 37.9 },\r\n    { x: 13, y: 15.6 },\r\n    { x: 14, y: 21.7 },\r\n    { x: 15, y: 25.2 },\r\n    { x: 16, y: 16.5 },\r\n    { x: 17, y: 25.8 }\r\n  ];\r\n  // useEffect(() => {\r\n  // }, []);\r\n  \r\n  useEffect(() => {\r\n    teamService.getStartingLineups(selectedTeam)\r\n      .then((response) => setLastWeekData(response));\r\n\r\n    teamService.getSpecificTeamSeasonData(selectedTeam)\r\n      .then((response) => setSeasonData(response));\r\n\r\n    teamService.getSpecificTeamLatestGameData(selectedTeam)\r\n      .then((response) => setLatestGameData(response));\r\n\r\n    teamService.getPlayerFantasyPointsHistory(selectedTeam)\r\n      .then((response) => setSeasonFanPoints(response));\r\n\r\n\r\n  }, []);\r\n  \r\n  /*\r\n    How it's working: sort the array of player based on whats in the sortType variable, this follows the selected prompt\r\n      in the scrolling thing(i dont know the word).\r\n\r\n    This gives an ordered array in the way we want the list to be.\r\n\r\n    The list entries(on the screen) comes from the ListItem component wich takes firstName, lastName and position as props to set the label of the list item\r\n      AND it takes the useThat props that is passed straightttt to the carousel component so you need to pass it an array and everything is gonna be render\r\n      in the carousel.\r\n\r\n    IF IT DONT WORK, the ListItem component, in the carousel the slides is set as slides={[useThat]} SOOO drop the [], i made the testing without\r\n      passing useThat an array and only a component so it was my easy fix to test everything.\r\n  */\r\n\r\n  \r\n  \r\n  const arrayListItem = [];\r\n  if (lastWeekData && latestGameData && seasonData && seasonFanPoints) {\r\n    const rankedPlayers = lastWeekData.players.sort((a, b) => b[`${sortType}`] - a[`${sortType}`]);\r\n    console.log(rankedPlayers);\r\n    // console.log(\"LAST WEEK'S DATA\", lastWeekData);\r\n    // console.log(\"SEASON DATA\", seasonData);\r\n    // console.log(\"LATEST GAME DATA\", latestGameData);\r\n    rankedPlayers.map((singlePlayer) => {\r\n    //   // singlePlayer.playerName // = \"Bradley Beal\"\r\n    //   // console.log(`SINGLE PLAYER: ${singlePlayer.playerName} :: `, latestGameData.data.find(({ playername }) => playername === singlePlayer.playerName));\r\n      // console.log(seasonFanPoints.find(({ playerName }) => playerName === singlePlayer.playerName).games);\r\n      // seasonData.data.find(({ playername }) => playername === singlePlayer.playerName)\r\n      // latestGameData.data.find(({ playername }) => playername === singlePlayer.playerName)\r\n      arrayListItem.push(<ListItem key={singlePlayer.playerId}\r\n        useThat={ playerStats(\r\n          latestGameData.data.find(({ playername }) => playername === singlePlayer.playerName),\r\n          seasonData.data.find(({ playername }) => playername === singlePlayer.playerName),\r\n          seasonFanPoints.find(({ playerName }) => playerName === singlePlayer.playerName).games,\r\n          singlePlayer\r\n        ) }\r\n        playerName={singlePlayer.playerName}\r\n        position={singlePlayer.position}\r\n        sortType={sortType}\r\n        stat={singlePlayer[`${sortType}`]}\r\n      />);\r\n    });\r\n  }\r\n \r\n  return (\r\n    <StyledStartingLineups>\r\n      <FormControl fullWidth>\r\n        {/* <InputLabel>Rank list by:</InputLabel> */}\r\n        <Select\r\n          value={sortType}\r\n          // label=\"Rank by:\"\r\n          onChange={handleChange}\r\n          // sx={{\"'&:not(.Mui-disabled):hover::before\": {borderColor: \"white\"}}}\r\n        >\r\n\r\n          {/* <MenuItem value={\"Game\"}>Game</MenuItem> */}\r\n          <MenuItem value={\"lastWeekFantasyPointsYahoo\"}>Fantasy Points</MenuItem>\r\n          <MenuItem value={\"lastWeekPoints\"}>Points</MenuItem>\r\n          <MenuItem value={\"lastWeekBlockedShots\"}>Blocks</MenuItem>\r\n          <MenuItem value={\"lastWeekSteals\"}>Steals</MenuItem>\r\n\r\n        </Select>\r\n      </FormControl>\r\n      <List>\r\n        {arrayListItem}\r\n      </List>\r\n      <Button\r\n        onClick={() => {\r\n          onClick(\"SpecificTeamOverview\");\r\n        }}\r\n        variant={\"outlined\"}\r\n        className={\"back-button\"}\r\n      >\r\n        Back\r\n      </Button>\r\n    </StyledStartingLineups>\r\n  );\r\n}\r\n\r\nStartingLineups.propTypes = { // prop-types ensure that props are as component expected\r\n  onClick: PropTypes.func.isRequired,\r\n  selectedTeam: PropTypes.number.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}