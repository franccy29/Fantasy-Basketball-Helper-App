{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AuthService from '../services/auth.service';\nimport Button from '@mui/material/Button';\nimport ErrorAlert from './utilities/ErrorAlert.jsx';\nimport TextField from '@mui/material/TextField';\nimport { StyledLogin } from '../style/Login.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const [loginError, setLoginError] = useState({\n    hasError: false,\n    msg: ''\n  }); // states for controlled components\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    onClick,\n    setLogin\n  } = props;\n\n  const handleLogin = function (event) {\n    event.preventDefault();\n    AuthService.login(email, password).then(() => {\n      // sends credentials to backend and expects to receieve access token & refresh token\n      console.log(\"Logged in!\");\n      setLogin(true);\n      onClick(\"HomeLog\");\n    }).catch(err => {\n      // unsuccessful error passed here from api.js(interceptors.response)) -> auth.service(login.post) -> here\n      console.log(\"data:\", err.response.data);\n      console.log(\"status:\", err.response.status);\n      console.log(\"headers:\", err.response.headers);\n      setLoginError({\n        // enable error message mui component if login was unsuccessful\n        hasError: true,\n        msg: err.response.data\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledLogin, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogin,\n          variant: \"outlined\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onClick(\"HomePage\"),\n          variant: \"outlined\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), loginError.hasError === true && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        text: loginError.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"0owtiavHP6weVUPi+VfVCkBlABk=\");\n\n_c = Login;\nLogin.propTypes = {\n  // prop-types ensure that props are as component expected\n  onClick: PropTypes.func.isRequired,\n  setLogin: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/Login.jsx"],"names":["React","useState","PropTypes","AuthService","Button","ErrorAlert","TextField","StyledLogin","Login","props","loginError","setLoginError","hasError","msg","email","setEmail","password","setPassword","onClick","setLogin","handleLogin","event","preventDefault","login","then","console","log","catch","err","response","data","status","headers","e","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AuthService from '../services/auth.service';\r\nimport Button from '@mui/material/Button';\r\nimport ErrorAlert from './utilities/ErrorAlert.jsx';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { StyledLogin } from '../style/Login.styles.jsx';\r\n\r\nexport default function Login(props) {\r\n  const [loginError, setLoginError] = useState({\r\n    hasError: false,\r\n    msg: ''\r\n  });\r\n  // states for controlled components\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { onClick, setLogin } = props;\r\n  const handleLogin = function(event) {\r\n    event.preventDefault();\r\n    AuthService.login(email, password).then(() => { // sends credentials to backend and expects to receieve access token & refresh token\r\n      console.log(\"Logged in!\");\r\n      setLogin(true);\r\n      onClick(\"HomeLog\");\r\n    }).catch((err) => {\r\n      // unsuccessful error passed here from api.js(interceptors.response)) -> auth.service(login.post) -> here\r\n      console.log(\"data:\", err.response.data);\r\n      console.log(\"status:\", err.response.status);\r\n      console.log(\"headers:\", err.response.headers);\r\n      setLoginError({ // enable error message mui component if login was unsuccessful\r\n        hasError: true,\r\n        msg: err.response.data\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <StyledLogin>\r\n      <p>\r\n        <h3>Login</h3>\r\n        <form autoComplete=\"off\" onSubmit={(e) => e.preventDefault()}>\r\n          <TextField\r\n            label={\"email\"}\r\n            type={\"email\"}\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            label={\"password\"}\r\n            type={\"password\"}\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n        </form>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={handleLogin}\r\n            variant=\"outlined\"\r\n          >\r\n            Login\r\n          </Button>\r\n          <Button\r\n            onClick={() => onClick(\"HomePage\")}\r\n            variant=\"outlined\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n        { loginError.hasError === true && <ErrorAlert text={loginError.msg}/>}\r\n      </p>\r\n    </StyledLogin>\r\n  );\r\n}\r\nLogin.propTypes = { // prop-types ensure that props are as component expected\r\n  onClick: PropTypes.func.isRequired,\r\n  setLogin: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}