{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AuthService from \"../services/auth.service.js\";\nimport Button from '@mui/material/Button';\nimport ErrorAlert from \"./utilities/ErrorAlert.jsx\";\nimport TextField from \"@mui/material/TextField\";\nimport { StyledRegister } from \"../style/Register.styles.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n\n  const [registerError, setRegisterError] = useState({\n    hasError: false,\n    msg: \"\"\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    onClick\n  } = props;\n\n  const handleRegister = event => {\n    event.preventDefault();\n    AuthService.register(email, password).then(() => {\n      console.log(\"Registered!\");\n      onClick(\"HomeLog\");\n    }).catch(err => {\n      setRegisterError({\n        hasError: true,\n        msg: err.response.data\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledRegister, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRegister,\n          variant: \"outlined\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onClick(\"HomePage\"),\n          variant: \"outlined\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), registerError.hasError === true && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n        text: registerError.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"SCJD4YFs6sJIp4ovh/fKbnoessY=\");\n\n_c = Register;\nRegister.propTypes = {\n  // prop-types ensure that props are as component expected\n  onClick: PropTypes.func.isRequired\n}; //STRETCH: form validation\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/Register.jsx"],"names":["React","useState","PropTypes","AuthService","Button","ErrorAlert","TextField","StyledRegister","Register","props","registerError","setRegisterError","hasError","msg","email","setEmail","password","setPassword","onClick","handleRegister","event","preventDefault","register","then","console","log","catch","err","response","data","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AuthService from \"../services/auth.service.js\";\r\nimport Button from '@mui/material/Button';\r\nimport ErrorAlert from \"./utilities/ErrorAlert.jsx\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { StyledRegister } from \"../style/Register.styles.jsx\";\r\nexport default function Register(props) {\r\n  const [registerError, setRegisterError] = useState({\r\n    hasError: false,\r\n    msg: \"\"\r\n  });\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { onClick } = props;\r\n  const handleRegister = (event) => {\r\n    event.preventDefault();\r\n    AuthService.register(email, password).then(() => {\r\n      console.log(\"Registered!\");\r\n      onClick(\"HomeLog\");\r\n    }).catch((err) => {\r\n      setRegisterError({\r\n        hasError: true,\r\n        msg: err.response.data\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <StyledRegister>\r\n      <p>\r\n        <h3>Register</h3>\r\n        <form>\r\n          <TextField\r\n            label={\"email\"}\r\n            type={\"email\"}\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            label={\"password\"}\r\n            type={\"password\"}\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n        </form>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            onClick={handleRegister}\r\n            variant=\"outlined\"\r\n          >\r\n            Register\r\n          </Button>\r\n          <Button\r\n            onClick={() => onClick(\"HomePage\")}\r\n            variant=\"outlined\"\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n        { registerError.hasError === true && <ErrorAlert text={registerError.msg}/>}\r\n      </p>\r\n    </StyledRegister>\r\n  );\r\n}\r\nRegister.propTypes = { // prop-types ensure that props are as component expected\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n//STRETCH: form validation"]},"metadata":{},"sourceType":"module"}