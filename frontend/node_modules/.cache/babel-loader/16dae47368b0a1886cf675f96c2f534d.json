{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/BestWorstChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropType from 'prop-types';\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryLabel, VictoryStack } from \"victory\"; // const dataA = [\n//   { x: \"Personal Drones\", y: 57 },\n//   { x: \"Smart Thermostat\", y: 40 },\n//   { x: \"Television\", y: 38 },\n//   { x: \"Smartwatch\", y: 37 },\n//   { x: \"Fitness Monitor\", y: 25 },\n//   { x: \"Tablet\", y: 19 },\n//   { x: \"Camera\", y: 15 },\n//   { x: \"Laptop\", y: 13 },\n//   { x: \"Phone\", y: 12 }\n// ];\n// const dataB = dataA.map((point) => {\n//   const y = Math.round(point.y + 3 * (Math.random() - 0.5));\n//   return { ...point, y };\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 300;\nconst height = 30;\nexport default function BestWorstChart(props) {\n  _s();\n\n  const [valueA, setValueA] = useState(0); // topPerformer stats\n\n  const [valueB, setValueB] = useState(0); // worstPerformer stats\n\n  const {\n    topPerformerStat,\n    worstPerformerStat,\n    category\n  } = props;\n  console.log(\"1. HEREE TOP\", topPerformerStat);\n  console.log(\"3. HEREE WORST\", worstPerformerStat);\n  const dataA = [{\n    x: category,\n    y: valueA\n  } // { x: \"Assists\", y: 20 },\n  // { x: \"Rebounds\", y: 200 },\n  // { x: \"Steals\", y: 30 },\n  ];\n  const dataB = [{\n    x: category,\n    y: valueB\n  } // { x: \"Assists\", y: 120 },\n  // { x: \"Rebounds\", y: 410 },\n  // { x: \"Steals\", y: 5 },\n  ]; // Math.round(topPerformer.points)\n  // Math.round(topPerformer.assists)\n  // Math.round(topPerformer.rebounds)\n  // Math.round(topPerformer.steals)\n  // Math.round(worstPerformer.points)\n  // Math.round(worstPerformer.assists)\n  // Math.round(worstPerformer.rebounds)\n  // Math.round(worstPerformer.steals)\n\n  useEffect(() => {\n    setValueA(Math.round(topPerformerStat) || 0);\n    setValueB(Math.round(worstPerformerStat) || 0);\n  }, [topPerformerStat, worstPerformerStat]); // useEffect(() => {\n  //   setDataA([\n  //     { x: \"Points\", y: topPerformer.points },\n  //     { x: \"Assists\", y: topPerformer.assists },\n  //     { x: \"Rebounds\", y: topPerformer.rebounds },\n  //     { x: \"Steals\", y: topPerformer.steals },\n  //   ]);\n  //   setDataB([\n  //     { x: \"Points\", y: worstPerformer.points },\n  //     { x: \"Assists\", y: worstPerformer.assists },\n  //     { x: \"Rebounds\", y: worstPerformer.rebounds },\n  //     { x: \"Steals\", y: worstPerformer.steals },\n  //   ]);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(VictoryChart, {\n    horizontal: true,\n    height: height,\n    width: width,\n    padding: 75,\n    children: [/*#__PURE__*/_jsxDEV(VictoryStack, {\n      style: {\n        data: {\n          width: 25\n        },\n        labels: {\n          fontSize: 15\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(VictoryBar, {\n        style: {\n          data: {\n            fill: \"tomato\"\n          },\n          labels: {\n            fill: \"white\"\n          }\n        },\n        data: dataA,\n        y: data => -Math.abs(data.y),\n        labels: _ref => {\n          let {\n            datum\n          } = _ref;\n          return `${Math.abs(datum.y)}`;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VictoryBar, {\n        style: {\n          data: {\n            fill: \"orange\"\n          },\n          labels: {\n            fill: \"white\"\n          }\n        },\n        data: dataB,\n        labels: _ref2 => {\n          let {\n            datum\n          } = _ref2;\n          return `${Math.abs(datum.y)}`;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VictoryAxis, {\n      style: {\n        axis: {\n          stroke: \"transparent\"\n        },\n        ticks: {\n          stroke: \"transparent\"\n        },\n        tickLabels: {\n          fontSize: 15,\n          fill: \"white\"\n        }\n      }\n      /*\r\n        Use a custom tickLabelComponent with\r\n        an absolutely positioned x value to position\r\n        your tick labels in the center of the chart. The correct\r\n        y values are still provided by VictoryAxis for each tick\r\n      */\n      ,\n      tickLabelComponent: /*#__PURE__*/_jsxDEV(VictoryLabel, {\n        x: width / 2,\n        textAnchor: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this),\n      tickValues: dataA.map(point => point.x).reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BestWorstChart, \"aOevL+J64qMELCUHhVr57nNu1GU=\");\n\n_c = BestWorstChart;\nBestWorstChart.propTypes = {\n  topPerformerStat: PropType.number,\n  worstPerformerStat: PropType.number,\n  category: PropType.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"BestWorstChart\");","map":{"version":3,"sources":["/mnt/c/Users/frenk/Documents/GitHub/Fantasy-Basketball-Helper-App/frontend/src/components/BestWorstChart.jsx"],"names":["React","useEffect","useState","PropType","VictoryAxis","VictoryBar","VictoryChart","VictoryLabel","VictoryStack","width","height","BestWorstChart","props","valueA","setValueA","valueB","setValueB","topPerformerStat","worstPerformerStat","category","console","log","dataA","x","y","dataB","Math","round","data","labels","fontSize","fill","abs","datum","axis","stroke","ticks","tickLabels","map","point","reverse","propTypes","number","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,YAAhD,EAA8DC,YAA9D,QAAkF,SAAlF,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,EAAf;AAEA,eAAe,SAASC,cAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC,CAD6C,CACJ;;AACzC,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC,CAF6C,CAEJ;;AAEzC,QAAM;AAAEe,IAAAA,gBAAF;AAAoBC,IAAAA,kBAApB;AAAwCC,IAAAA;AAAxC,MAAqDP,KAA3D;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,gBAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,kBAA9B;AAIA,QAAMI,KAAK,GAAG,CACZ;AAAEC,IAAAA,CAAC,EAAEJ,QAAL;AAAeK,IAAAA,CAAC,EAAEX;AAAlB,GADY,CAEZ;AACA;AACA;AAJY,GAAd;AAOA,QAAMY,KAAK,GAAG,CACZ;AAAEF,IAAAA,CAAC,EAAEJ,QAAL;AAAeK,IAAAA,CAAC,EAAET;AAAlB,GADY,CAEZ;AACA;AACA;AAJY,GAAd,CAjB6C,CAuB7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS,CAACY,IAAI,CAACC,KAAL,CAAWV,gBAAX,KAAgC,CAAjC,CAAT;AACAD,IAAAA,SAAS,CAACU,IAAI,CAACC,KAAL,CAAWT,kBAAX,KAAkC,CAAnC,CAAT;AACD,GAHQ,EAGN,CAACD,gBAAD,EAAmBC,kBAAnB,CAHM,CAAT,CAhC6C,CAoC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,YAAD;AAAc,IAAA,UAAU,MAAxB;AACE,IAAA,MAAM,EAAER,MADV;AAEE,IAAA,KAAK,EAAED,KAFT;AAGE,IAAA,OAAO,EAAE,EAHX;AAAA,4BAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAE;AAAEmB,QAAAA,IAAI,EAAE;AAAEnB,UAAAA,KAAK,EAAE;AAAT,SAAR;AAAuBoB,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAA/B,OADT;AAAA,8BAGE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE;AAAEF,UAAAA,IAAI,EAAE;AAAEG,YAAAA,IAAI,EAAE;AAAR,WAAR;AAA4BF,UAAAA,MAAM,EAAE;AAAEE,YAAAA,IAAI,EAAE;AAAR;AAApC,SADT;AAEE,QAAA,IAAI,EAAET,KAFR;AAGE,QAAA,CAAC,EAAGM,IAAD,IAAW,CAACF,IAAI,CAACM,GAAL,CAASJ,IAAI,CAACJ,CAAd,CAHjB;AAIE,QAAA,MAAM,EAAE;AAAA,cAAC;AAAES,YAAAA;AAAF,WAAD;AAAA,iBAAiB,GAAEP,IAAI,CAACM,GAAL,CAASC,KAAK,CAACT,CAAf,CAAkB,EAArC;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE;AAAEG,YAAAA,IAAI,EAAE;AAAR,WAAR;AAA4BF,UAAAA,MAAM,EAAE;AAAEE,YAAAA,IAAI,EAAE;AAAR;AAApC,SADT;AAEE,QAAA,IAAI,EAAEN,KAFR;AAGE,QAAA,MAAM,EAAE;AAAA,cAAC;AAAEQ,YAAAA;AAAF,WAAD;AAAA,iBAAiB,GAAEP,IAAI,CAACM,GAAL,CAASC,KAAK,CAACT,CAAf,CAAkB,EAArC;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAqBE,QAAC,WAAD;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SADD;AAELC,QAAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE;AAAV,SAFF;AAGLE,QAAAA,UAAU,EAAE;AAAEP,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,IAAI,EAAE;AAAtB;AAHP;AAKP;AACR;AACA;AACA;AACA;AACA;AAXM;AAYE,MAAA,kBAAkB,eAChB,QAAC,YAAD;AACE,QAAA,CAAC,EAAEtB,KAAK,GAAG,CADb;AAEE,QAAA,UAAU,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA,cAbJ;AAkBE,MAAA,UAAU,EAAEa,KAAK,CAACgB,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAAChB,CAA3B,EAA8BiB,OAA9B;AAlBd;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GA/FuB7B,c;;KAAAA,c;AAiGxBA,cAAc,CAAC8B,SAAf,GAA2B;AACzBxB,EAAAA,gBAAgB,EAAEd,QAAQ,CAACuC,MADF;AAEzBxB,EAAAA,kBAAkB,EAAEf,QAAQ,CAACuC,MAFJ;AAGzBvB,EAAAA,QAAQ,EAAEhB,QAAQ,CAACwC;AAHM,CAA3B","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropType from 'prop-types';\r\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryLabel, VictoryStack } from \"victory\";\r\n\r\n// const dataA = [\r\n//   { x: \"Personal Drones\", y: 57 },\r\n//   { x: \"Smart Thermostat\", y: 40 },\r\n//   { x: \"Television\", y: 38 },\r\n//   { x: \"Smartwatch\", y: 37 },\r\n//   { x: \"Fitness Monitor\", y: 25 },\r\n//   { x: \"Tablet\", y: 19 },\r\n//   { x: \"Camera\", y: 15 },\r\n//   { x: \"Laptop\", y: 13 },\r\n//   { x: \"Phone\", y: 12 }\r\n// ];\r\n\r\n// const dataB = dataA.map((point) => {\r\n//   const y = Math.round(point.y + 3 * (Math.random() - 0.5));\r\n//   return { ...point, y };\r\n// });\r\n\r\nconst width = 300;\r\nconst height = 30;\r\n\r\nexport default function BestWorstChart (props) {\r\n  const [valueA, setValueA] = useState(0); // topPerformer stats\r\n  const [valueB, setValueB] = useState(0); // worstPerformer stats\r\n\r\n  const { topPerformerStat, worstPerformerStat, category } = props;\r\n  console.log(\"1. HEREE TOP\", topPerformerStat);\r\n  console.log(\"3. HEREE WORST\", worstPerformerStat);\r\n\r\n\r\n\r\n  const dataA = [\r\n    { x: category, y: valueA},\r\n    // { x: \"Assists\", y: 20 },\r\n    // { x: \"Rebounds\", y: 200 },\r\n    // { x: \"Steals\", y: 30 },\r\n  ];\r\n\r\n  const dataB = [\r\n    { x: category, y: valueB},\r\n    // { x: \"Assists\", y: 120 },\r\n    // { x: \"Rebounds\", y: 410 },\r\n    // { x: \"Steals\", y: 5 },\r\n  ];\r\n  // Math.round(topPerformer.points)\r\n  // Math.round(topPerformer.assists)\r\n  // Math.round(topPerformer.rebounds)\r\n  // Math.round(topPerformer.steals)\r\n  // Math.round(worstPerformer.points)\r\n  // Math.round(worstPerformer.assists)\r\n  // Math.round(worstPerformer.rebounds)\r\n  // Math.round(worstPerformer.steals)\r\n\r\n  useEffect(() => {\r\n    setValueA(Math.round(topPerformerStat) || 0);\r\n    setValueB(Math.round(worstPerformerStat) || 0);\r\n  }, [topPerformerStat, worstPerformerStat]);\r\n  // useEffect(() => {\r\n  //   setDataA([\r\n  //     { x: \"Points\", y: topPerformer.points },\r\n  //     { x: \"Assists\", y: topPerformer.assists },\r\n  //     { x: \"Rebounds\", y: topPerformer.rebounds },\r\n  //     { x: \"Steals\", y: topPerformer.steals },\r\n  //   ]);\r\n  //   setDataB([\r\n  //     { x: \"Points\", y: worstPerformer.points },\r\n  //     { x: \"Assists\", y: worstPerformer.assists },\r\n  //     { x: \"Rebounds\", y: worstPerformer.rebounds },\r\n  //     { x: \"Steals\", y: worstPerformer.steals },\r\n  //   ]);\r\n  // }, []);\r\n\r\n  return (\r\n    <VictoryChart horizontal\r\n      height={height}\r\n      width={width}\r\n      padding={75}\r\n    >\r\n      <VictoryStack\r\n        style={{ data: { width: 25 }, labels: { fontSize: 15 } }}\r\n      >\r\n        <VictoryBar\r\n          style={{ data: { fill: \"tomato\" }, labels: { fill: \"white\" } }}\r\n          data={dataA}\r\n          y={(data) => (-Math.abs(data.y))}\r\n          labels={({ datum }) => (`${Math.abs(datum.y)}`)}\r\n        />\r\n        <VictoryBar\r\n          style={{ data: { fill: \"orange\" }, labels: { fill: \"white\" } }}\r\n          data={dataB}\r\n          labels={({ datum }) => (`${Math.abs(datum.y)}`)}\r\n        />\r\n      </VictoryStack>\r\n\r\n      <VictoryAxis\r\n        style={{\r\n          axis: { stroke: \"transparent\" },\r\n          ticks: { stroke: \"transparent\" },\r\n          tickLabels: { fontSize: 15, fill: \"white\" }\r\n        }}\r\n        /*\r\n          Use a custom tickLabelComponent with\r\n          an absolutely positioned x value to position\r\n          your tick labels in the center of the chart. The correct\r\n          y values are still provided by VictoryAxis for each tick\r\n        */\r\n        tickLabelComponent={\r\n          <VictoryLabel\r\n            x={width / 2}\r\n            textAnchor=\"middle\"\r\n          />\r\n        }\r\n        tickValues={dataA.map((point) => point.x).reverse()}\r\n      />\r\n    </VictoryChart>\r\n  );\r\n}\r\n\r\nBestWorstChart.propTypes = {\r\n  topPerformerStat: PropType.number,\r\n  worstPerformerStat: PropType.number,\r\n  category: PropType.string\r\n};"]},"metadata":{},"sourceType":"module"}